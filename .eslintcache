[{"/Users/dengel/code/oddle-react-task/src/App.tsx":"1","/Users/dengel/code/oddle-react-task/src/components/Searchbar/Searchbar.tsx":"2","/Users/dengel/code/oddle-react-task/src/environment.ts":"3","/Users/dengel/code/oddle-react-task/src/components/Users/User/User.tsx":"4","/Users/dengel/code/oddle-react-task/src/components/Users/Users.tsx":"5","/Users/dengel/code/oddle-react-task/src/components/Cockpit/Cockpit.tsx":"6","/Users/dengel/code/oddle-react-task/src/components/Loader/Loader.tsx":"7","/Users/dengel/code/oddle-react-task/src/components/UserProfile/UserProfile.tsx":"8","/Users/dengel/code/oddle-react-task/src/utils/call-github-api.tsx":"9","/Users/dengel/code/oddle-react-task/src/store/usersSlice.ts":"10","/Users/dengel/code/oddle-react-task/src/hooks/useIsMount.tsx":"11","/Users/dengel/code/oddle-react-task/src/components/Pagination/Pagination.tsx":"12","/Users/dengel/code/oddle-react-task/src/index.tsx":"13","/Users/dengel/code/oddle-react-task/src/store/index.ts":"14","/Users/dengel/code/oddle-react-task/src/store/rootReducer.ts":"15","/Users/dengel/code/oddle-react-task/src/utils/github-call.tsx":"16","/Users/dengel/code/oddle-react-task/src/utils/github-user-call.tsx":"17","/Users/dengel/code/oddle-react-task/src/reportWebVitals.ts":"18"},{"size":505,"mtime":1610255972171,"results":"19","hashOfConfig":"20"},{"size":1230,"mtime":1610347122696,"results":"21","hashOfConfig":"20"},{"size":81,"mtime":1610094764818,"results":"22","hashOfConfig":"23"},{"size":1232,"mtime":1610255972177,"results":"24","hashOfConfig":"20"},{"size":1411,"mtime":1610345235287,"results":"25","hashOfConfig":"20"},{"size":3355,"mtime":1610358744073,"results":"26","hashOfConfig":"20"},{"size":1614,"mtime":1610095182847,"results":"27","hashOfConfig":"23"},{"size":8197,"mtime":1610342619310,"results":"28","hashOfConfig":"20"},{"size":377,"mtime":1610161983830,"results":"29","hashOfConfig":"23"},{"size":1848,"mtime":1610359356705,"results":"30","hashOfConfig":"20"},{"size":207,"mtime":1610255972180,"results":"31","hashOfConfig":"20"},{"size":1812,"mtime":1610359326810,"results":"32","hashOfConfig":"20"},{"size":612,"mtime":1610166486272,"results":"33","hashOfConfig":"23"},{"size":396,"mtime":1610176674343,"results":"34","hashOfConfig":"23"},{"size":262,"mtime":1610255972184,"results":"35","hashOfConfig":"20"},{"size":1431,"mtime":1610190987090,"results":"36","hashOfConfig":"23"},{"size":1164,"mtime":1610263342163,"results":"37","hashOfConfig":"20"},{"size":425,"mtime":1610090450340,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xnr3il",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qoktn4",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/dengel/code/oddle-react-task/src/App.tsx",[],"/Users/dengel/code/oddle-react-task/src/components/Searchbar/Searchbar.tsx",[],["79","80"],"/Users/dengel/code/oddle-react-task/src/environment.ts",[],"/Users/dengel/code/oddle-react-task/src/components/Users/User/User.tsx",[],"/Users/dengel/code/oddle-react-task/src/components/Users/Users.tsx",["81","82"],"/Users/dengel/code/oddle-react-task/src/components/Cockpit/Cockpit.tsx",[],"/Users/dengel/code/oddle-react-task/src/components/Loader/Loader.tsx",[],["83","84"],"/Users/dengel/code/oddle-react-task/src/components/UserProfile/UserProfile.tsx",["85","86","87","88","89"],"import React, { useEffect, useRef, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport Loader from '../Loader/Loader';\n\nimport {callGithubUserReposAPI, callGithubFollowersAPI, callGithubFollowingAPI, callGithubUserAPI} from '../../utils/github-user-call';\nimport callGithubAPI from '../../utils/call-github-api';\nimport { nextTick } from 'process';\n\ntype User = UserFromRouterState | UserFromDirectURL\n\ntype UserFromRouterState = {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string | JSX.Element;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n  score?: number;\n}\n\ntype UserFromDirectURL = {\n  name: string;\n  company?: any;\n  blog: string;\n  location: string;\n  email: string;\n  hireable?: any;\n  bio?: any;\n  twitter_username?: any;\n  public_repos: number;\n  public_gists: number;\n  followers: number;\n  following: number;\n  created_at: Date;\n  updated_at: Date;\n} & UserFromRouterState\n\nconst getUser = async (login: string) => {\n  let res = await callGithubUserAPI(login)\n  let user: UserFromDirectURL = await res.json()\n  return user\n}\n\nconst HorizontalSpacingDiv = styled.div`\n  display:flex;\n  height:40vh;\n  flex-direction:row;\n  justify-content: space-between;\n  text-align:center;\n  align-items:top;\n  width: 60%;\n  margin: 0 auto;\n  border-bottom: 5px dotted #483d8b59;\n  @media (max-width: 600px) {\n    flex-direction:column;\n    height: unset;\n    border-bottom: 0px dotted white;\n  }\n  div {\n    height: inherit;\n    overflow-y: scroll;\n    text-align:center;\n    margin:0 auto;\n    padding: 0px 5px 0px 5px;\n    margin-bottom: 2em;\n    scroll-behavior: smooth;\n    text-overflow: clip;\n    overflow-x: hidden;\n    width: 30%;\n    @media (max-width: 600px) {\n      height: 12em;\n      width:70%;\n      border-bottom: 5px dotted #483d8b59;\n    }\n  }\n\n  div h3 {\n    position: sticky;\n    top: 0em;\n    background: darkslateblue;\n    padding-top: unset;\n    margin-top: unset;\n    color: white;\n    border-radius: 5px;\n    margin-bottom: 0em;\n  }\n  div p {\n    margin: 0 auto;\n    line-height:2em;\n    max-width: 14chch;\n    @media (max-width: 600px) {\n      max-width:70%\n    }\n  }\n\n`\n\nconst BackButton = styled.button`\n  border: none;\n  outline: none;\n  height: 3em;\n  width: 5em;\n  border-radius: 5px;\n  background: #483d8b12;\n  top: 50%;\n  position: sticky;\n  font-weight:600;\n`\n\nconst UserAvatar = styled.img`\n  margin-bottom: 1em;\n  display: flex;\n  margin: 0 auto;\n  height:7em;\n  width:7em;\n  border-radius:50%;\n`\n\nconst UserLogin = styled.h2`\n  text-align:center;\n`\n\nlet isUserFromDirectURL = (obj: any) => {\n  return obj === undefined || obj.created !== undefined\n} \n\nconst UserProfile = (props: any) => {\n\n  let history = useHistory()\n  let goBackHandler;\n  if (props?.history?.history?.state?.user) {\n       goBackHandler = () => {\n         console.log(\"we're in here\", props)\n         props.history.goBack()\n       }\n    } else {\n      goBackHandler = () => {\n        console.log('did the other go  back handler')\n        history.push('/')\n      }\n    }\n\n  let dummyUser = {\n  login: \"finding user...\",\n  id: 2,\n  node_id: \"string\",\n  avatar_url: <Loader/>,\n  gravatar_id: \"string\",\n  url: \"string\",\n  html_url: \"string\",\n  followers_url: \"string\",\n  following_url: \"string\",\n  gists_url: \"string\",\n  starred_url: \"string\",\n  subscriptions_url: \"string\",\n  organizations_url: \"string\",\n  repos_url: \"string\",\n  events_url: \"string\",\n  received_events_url: \"string\",\n  type: \"string\",\n  site_admin: false,\n  score: 1,\n  }\n  const [reposState, setReposState] = useState<{repos: any[]}>({repos: []})\n  const [followersState, setFollowersState] = useState<{followers: any[]}>({followers: []})\n  const [followingState, setFollowingState] = useState<{following: any[]}>({following: []})\n  const [isLoadingState, setIsLoadingState] = useState<{isLoading: boolean}>({isLoading: true})\n  const [userState, setUserState] = useState<{user: User}>({user: dummyUser})\n  let {login} = useParams<{login: string}>()\n  let user: User;\n  useEffect(() => {\n    (async function() {\n      if (props?.location?.state?.user) {\n        user = props?.location?.state?.user\n        setUserState({user: props.location.state.user})\n      } else {\n        user = await getUser(login);\n        setUserState({user: user})\n      }\n    })()\n  },[])\n    \n  // let user = props?.location?.state?.user \n  useEffect(() => {\n    setIsLoadingState({isLoading: true});\n    (async function () {\n      // user = await getUser(login)\n      if (!isUserFromDirectURL(user)) {\n        user = await getUser(login);\n        setUserState({user: user})\n      }\n      console.log(\"inside mounted\")\n      let reposResponse = await callGithubUserReposAPI(login)\n      let repos = await reposResponse.json();\n      setReposState({repos: repos})\n\n      let followersResponse = await callGithubFollowersAPI(login)\n      let followers= await followersResponse.json()\n      \n      setFollowersState({followers: followers})\n\n      let followingResponse = await callGithubFollowingAPI(login)\n      let following = await followingResponse.json()\n      \n      setFollowingState({following: following})\n    })().finally(() => setIsLoadingState({isLoading: false}))\n  },[login])\n  /**\n   * TODO\n   * [] make requests to the user repositories api, folowers api, and following api\n   * [] make it look pretty\n   * [x] add a back button\n   * [] make sure the historyAPI is working(?)\n   * [] create a check that, if the route is accessed without being \"navigated\" \n   * to from within the app, that it will fetch the correct data anyways\n   */\n  // console.log('repostate', reposState.repos)\n  // const repos = reposState.repos\n  // const followers = followersState.followers\n  // const following = followingState.following\n   \n   let repos = () => {\n     if (reposState.repos.length === 0) {\n      return (\n        <div>\n          <h3>Repos</h3>\n          <br/>\n          <em>No repos. Guess {login} uses Gitlab.</em>\n        </div>\n      )\n    }\n     return ( \n     <div>\n      <h3>Repos</h3>\n          {\n          reposState.repos.map( (repo, id) => {\n            \n            return (\n              <p key={id}>{repo.name}</p> \n              )\n            })\n          }\n      </div>)}\n\n    \n  let followers = () => {\n    if (followersState.followers.length === 0) {\n      return (\n        <div>\n          <h3>Followers</h3>\n          <br/>\n          <em>Looks like {login} has no followers. </em>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <h3>Followers</h3>\n        {\n        followersState.followers.map( (follower, id) => {\n          return (\n            <p key={id}>{follower.login}</p> \n            )\n          })\n        }\n      </div>)\n  }\n\n  let following = () => {\n    if (followingState.following.length === 0) {\n      return (\n        <div>\n          <h3>Following</h3>\n          <br/>\n          <em>Hmm, {login} isn't following anyone</em>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <h3>Following</h3>\n        {\n\n          followingState.following.map( (follow, id) => {\n            \n            return (\n              <p key={id}>{follow.login}</p> \n              )\n            })\n        }\n      </div>\n    )\n  }\n\n  return(\n    <React.Fragment>\n      <BackButton onClick={goBackHandler}> back </BackButton>\n      { typeof(userState.user.avatar_url) === 'string' ?\n        <UserAvatar src={userState.user.avatar_url} alt=\"\"/> :\n        userState.user.avatar_url  \n       }\n      <UserLogin>{userState.user.login}</UserLogin>\n      { isLoadingState.isLoading ? <Loader/> :\n      <HorizontalSpacingDiv>\n        {repos()}\n        {followers()}\n        {following()}\n      </HorizontalSpacingDiv>}\n      {/* <a href={currentUserState?.currentUser?.followers_url}>Followers</a>\n      <a href={currentUserState?.currentUser?.following_url}>Following</a> */}\n    </React.Fragment>\n  )\n}\n\nexport default UserProfile",["90","91"],"/Users/dengel/code/oddle-react-task/src/utils/call-github-api.tsx",[],"/Users/dengel/code/oddle-react-task/src/store/usersSlice.ts",[],"/Users/dengel/code/oddle-react-task/src/hooks/useIsMount.tsx",[],"/Users/dengel/code/oddle-react-task/src/components/Pagination/Pagination.tsx",[],"/Users/dengel/code/oddle-react-task/src/index.tsx",[],"/Users/dengel/code/oddle-react-task/src/store/index.ts",["92","93"],"/Users/dengel/code/oddle-react-task/src/store/rootReducer.ts",[],"/Users/dengel/code/oddle-react-task/src/utils/github-call.tsx",["94"],"/Users/dengel/code/oddle-react-task/src/utils/github-user-call.tsx",[],"/Users/dengel/code/oddle-react-task/src/reportWebVitals.ts",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":17,"nodeType":"101","messageId":"102","endLine":2,"endColumn":26},{"ruleId":"99","severity":1,"message":"103","line":27,"column":10,"nodeType":"101","messageId":"102","endLine":27,"endColumn":27},{"ruleId":"95","replacedBy":"104"},{"ruleId":"97","replacedBy":"105"},{"ruleId":"99","severity":1,"message":"106","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":34},{"ruleId":"99","severity":1,"message":"107","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":21},{"ruleId":"99","severity":1,"message":"108","line":9,"column":10,"nodeType":"101","messageId":"102","endLine":9,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":188,"column":16,"nodeType":"111","endLine":188,"endColumn":44},{"ruleId":"109","severity":1,"message":"110","line":203,"column":16,"nodeType":"112","endLine":203,"endColumn":36},{"ruleId":"95","replacedBy":"113"},{"ruleId":"97","replacedBy":"114"},{"ruleId":"99","severity":1,"message":"115","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":25},{"ruleId":"99","severity":1,"message":"116","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":18},{"ruleId":"99","severity":1,"message":"117","line":6,"column":7,"nodeType":"101","messageId":"102","endLine":6,"endColumn":14},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'selectedUserState' is assigned a value but never used.",["118"],["119"],"'useRef' is defined but never used.","'callGithubAPI' is defined but never used.","'nextTick' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'user' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ChainExpression","AwaitExpression",["118"],["119"],"'combineReducers' is defined but never used.","'usersSlice' is defined but never used.","'headers' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]