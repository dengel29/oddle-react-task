[{"/Users/dengel/code/oddle-react-task/src/App.tsx":"1","/Users/dengel/code/oddle-react-task/src/components/Searchbar/Searchbar.tsx":"2","/Users/dengel/code/oddle-react-task/src/environment.ts":"3","/Users/dengel/code/oddle-react-task/src/components/Users/User/User.tsx":"4","/Users/dengel/code/oddle-react-task/src/components/Users/Users.tsx":"5","/Users/dengel/code/oddle-react-task/src/components/Cockpit/Cockpit.tsx":"6","/Users/dengel/code/oddle-react-task/src/components/Loader/Loader.tsx":"7","/Users/dengel/code/oddle-react-task/src/components/UserProfile/UserProfile.tsx":"8","/Users/dengel/code/oddle-react-task/src/store/usersSlice.ts":"9","/Users/dengel/code/oddle-react-task/src/components/Pagination/Pagination.tsx":"10","/Users/dengel/code/oddle-react-task/src/index.tsx":"11","/Users/dengel/code/oddle-react-task/src/store/index.ts":"12","/Users/dengel/code/oddle-react-task/src/store/rootReducer.ts":"13","/Users/dengel/code/oddle-react-task/src/reportWebVitals.ts":"14"},{"size":505,"mtime":1610255972171,"results":"15","hashOfConfig":"16"},{"size":1238,"mtime":1610375091757,"results":"17","hashOfConfig":"16"},{"size":81,"mtime":1610094764818,"results":"18","hashOfConfig":"19"},{"size":1235,"mtime":1610376024272,"results":"20","hashOfConfig":"16"},{"size":1693,"mtime":1610376037407,"results":"21","hashOfConfig":"16"},{"size":3466,"mtime":1610380198538,"results":"22","hashOfConfig":"16"},{"size":1614,"mtime":1610095182847,"results":"23","hashOfConfig":"16"},{"size":8673,"mtime":1610422711074,"results":"24","hashOfConfig":"16"},{"size":1930,"mtime":1610380109773,"results":"25","hashOfConfig":"16"},{"size":1784,"mtime":1610372468683,"results":"26","hashOfConfig":"16"},{"size":612,"mtime":1610166486272,"results":"27","hashOfConfig":"19"},{"size":396,"mtime":1610176674343,"results":"28","hashOfConfig":"19"},{"size":262,"mtime":1610255972184,"results":"29","hashOfConfig":"16"},{"size":425,"mtime":1610090450340,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xnr3il",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qoktn4",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/dengel/code/oddle-react-task/src/App.tsx",[],"/Users/dengel/code/oddle-react-task/src/components/Searchbar/Searchbar.tsx",[],"/Users/dengel/code/oddle-react-task/src/environment.ts",[],"/Users/dengel/code/oddle-react-task/src/components/Users/User/User.tsx",[],"/Users/dengel/code/oddle-react-task/src/components/Users/Users.tsx",["61","62"],"/Users/dengel/code/oddle-react-task/src/components/Cockpit/Cockpit.tsx",["63"],"/Users/dengel/code/oddle-react-task/src/components/Loader/Loader.tsx",[],"/Users/dengel/code/oddle-react-task/src/components/UserProfile/UserProfile.tsx",["64","65","66"],"import React, { useEffect, useRef, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport Loader from '../Loader/Loader';\n\nimport {callGithubUserReposAPI, callGithubFollowersAPI, callGithubFollowingAPI, callGithubUserAPI} from '../../utils/githubUserCall';\nimport callGithubAPI from '../../utils/callGithubAPI';\n\ntype UserFromRouterState = {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n  score?: number;\n}\n\ntype User = {\n  name: string;\n  company?: any;\n  blog: string;\n  location: string;\n  email: string;\n  hireable?: any;\n  bio?: any;\n  twitter_username?: any;\n  public_repos: number;\n  public_gists: number;\n  followers: number;\n  following: number;\n  created_at?: Date;\n  updated_at?: Date;\n} & UserFromRouterState\n\nconst getFullUser = async (login: string) => {\n  let res = await callGithubUserAPI(login)\n  let user: User = await res.json()\n  return user\n}\n\ninterface HSDProps {\n  border: boolean\n}\n\nconst HorizontalSpacingDiv = styled.div<HSDProps>`\n  display:flex;\n  height:40vh;\n  flex-direction:row;\n  padding-bottom: 0.8em;\n  justify-content: space-between;\n  text-align:center;\n  align-items:top;\n  width: 60%;\n  margin: 0 auto;\n  margin-top: 1em;\n  border-bottom: ${props => props.border ? '4px dotted darkslateblue' : ''};\n  @media (max-width: 600px) {\n    flex-direction:column;\n    height: unset;\n    border-bottom: 0px dotted white;\n  }\n  div {\n    height: inherit;\n    overflow-y: scroll;\n    text-align:center;\n    margin:0 auto;\n    padding: 0px 5px 0px 5px;\n    margin-bottom: 2em;\n    scroll-behavior: smooth;\n    text-overflow: clip;\n    overflow-x: hidden;\n    width: 30%;\n    @media (max-width: 600px) {\n      height: 12em;\n      width:70%;\n      border-bottom: 5px dotted #483d8b59;\n    }\n  }\n\n  div h3 {\n    position: sticky;\n    top: 0em;\n    background: darkslateblue;\n    padding-top: unset;\n    margin-top: unset;\n    color: white;\n    border-radius: 5px;\n    margin-bottom: 0em;\n  }\n  div p {\n    margin: 0 auto;\n    line-height:2em;\n    max-width: 14chch;\n    @media (max-width: 600px) {\n      max-width:70%\n    }\n  }\n  pre {\n    text-align:initial\n  }\n\n`\n\nconst BackButton = styled.button`\n  border: none;\n  outline: none;\n  height: 3em;\n  width: 5em;\n  border-radius: 5px;\n  background: #483d8b12;\n  top: 50%;\n  position: sticky;\n  font-weight:600;\n`\n\nconst UserAvatar = styled.img`\n  margin-bottom: 1em;\n  display: flex;\n  margin: 0 auto;\n  height:7em;\n  width:7em;\n  border-radius:50%;\n`\n\nconst UserLogin = styled.h2`\n  text-align:center;\n`\n\n\nconst UserProfile = (props: any) => {\n  \n  let history = useHistory()\n  let goBackHandler: React.MouseEventHandler;\n  if (props?.history?.state?.user) {\n       goBackHandler = () => {\n         props.history.goBack()\n       }\n    } else {\n      goBackHandler = () => {\n        console.log('did the other go  back handler')\n        history.push('/')\n      }\n    }\n\n  let dummyUser: User = {\n  login: \"finding user...\",\n  id: 2,\n  node_id: \"string\",\n  avatar_url: \"\",\n  gravatar_id: \"string\",\n  url: \"string\",\n  html_url: \"string\",\n  followers_url: \"string\",\n  following_url: \"string\",\n  gists_url: \"string\",\n  starred_url: \"string\",\n  subscriptions_url: \"string\",\n  organizations_url: \"string\",\n  repos_url: \"string\",\n  events_url: \"string\",\n  received_events_url: \"string\",\n  type: \"string\",\n  site_admin: false,\n  score: 1,\n  name: \"string\",\n  company: \"none\",\n  blog: \"string\",\n  location: \"string\",\n  email: \"string\",\n  hireable: \"no\",\n  public_repos: 10,\n  public_gists: 10,\n  followers: 10,\n  following: 10,\n  created_at: undefined,\n  updated_at: undefined\n  }\n  const [reposState, setReposState] = useState<{repos: any[]}>({repos: []})\n  const [followersState, setFollowersState] = useState<{followers: any[]}>({followers: []})\n  const [followingState, setFollowingState] = useState<{following: any[]}>({following: []})\n  const [isLoadingState, setIsLoadingState] = useState<{isLoading: boolean}>({isLoading: true})\n  const [userState, setUserState] = useState<{user: User}>({user: dummyUser})\n  let {login} = useParams<{login: string}>()\n  let user: User;\n\n  const getUserFromStateOrHistory = async () => {\n    setIsLoadingState({isLoading: true});\n    // if (props?.history?.state?.user) {\n    //   user = props.location.state.user\n    //   setUserState({user: user})\n    // } else {\n    //   user = await getFullUser(login);\n    //   setUserState({user: user})\n    // }\n      user = await getFullUser(login);\n      setUserState({user: user})\n    await getUserCollections()\n    setIsLoadingState({isLoading: false});\n  }\n\n  useEffect(() => {\n    getUserFromStateOrHistory()\n  },[])\n    \n  const getRepos = async () => {\n    const reposResponse = await callGithubUserReposAPI(login)\n    const repos = await reposResponse.json();\n    setReposState({repos: repos})\n  }\n\n  const getFollowers = async () => {\n    const followersResponse = await callGithubFollowersAPI(login)\n    const followers= await followersResponse.json()\n    setFollowersState({followers: followers})\n  }\n\n  const getFollowing = async () => {\n    const followingResponse = await callGithubFollowingAPI(login)\n    const following = await followingResponse.json()\n    setFollowingState({following: following})\n  }\n  const getUserCollections = async () => {\n    Promise.all([\n      getRepos(),\n      getFollowers(),\n      getFollowing(),\n    ])\n  }\n\n   let repos = () => {\n     if (reposState.repos.length === 0 && !isLoadingState.isLoading) {\n      return (\n        <div>\n          <h3>Repos ({userState.user.public_repos})</h3>\n          <br/>\n          <em>No repos. Guess {login} uses Gitlab.</em>\n        </div>\n      )\n    }\n     return ( \n     <div>\n      <h3>Repos ({userState.user.public_repos})</h3>\n          {\n          reposState.repos.map( (repo, id) => {\n            \n            return (\n              <p key={id}>{repo.name}</p> \n              )\n            })\n          }\n      </div>)}\n\n    \n  let followers = () => {\n    if (followersState.followers.length === 0 && !isLoadingState.isLoading) {\n      return (\n        <div>\n          <h3>Followers ({userState.user.followers})</h3>\n          <br/>\n          <em>Looks like {login} has no followers. </em>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <h3>Followers ({userState.user.followers})</h3>\n        {\n        followersState.followers.map( (follower, id) => {\n          return (\n            <p key={id}>{follower.login}</p> \n            )\n          })\n        }\n      </div>)\n  }\n\n  let userCollections = () => {\n    return (\n      <React.Fragment>\n        {repos()}\n        {followers()}\n        {following()}\n      </React.Fragment>\n    )\n  }\n\n  let following = () => {\n    if (followingState.following.length === 0 && !isLoadingState.isLoading) {\n      return (\n        <div>\n          <h3>Following ({userState.user.following})</h3>\n          <br/>\n          <em>Hmm, {login} isn't following anyone</em>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <h3>Following ({userState.user.following})</h3>\n        {\n\n          followingState.following.map( (follow, id) => {\n            \n            return (\n              <p key={id}>{follow.login}</p> \n              )\n            })\n        }\n      </div>\n    )\n  }\n  let RenderAvatar = () => {\n    if (userState?.user) {\n      return (\n        <React.Fragment>\n        <UserAvatar src={userState.user.avatar_url} alt=\"\"/>\n        <UserLogin>{userState.user.login}</UserLogin>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <Loader/>\n      )\n    }\n  }\n\n  return(\n    <React.Fragment>\n      <BackButton onClick={goBackHandler}> back </BackButton>\n      {RenderAvatar()}\n      {isLoadingState.isLoading ? <Loader/> : \n      <HorizontalSpacingDiv border={true}>\n      { \n        !userState?.user ? <Loader/> :\n        userCollections()\n      }\n      </HorizontalSpacingDiv>}\n      {/* <a href={currentUserState?.currentUser?.followers_url}>Followers</a>\n      <a href={currentUserState?.currentUser?.following_url}>Following</a> */}\n      <HorizontalSpacingDiv border={false}>\n      <details><summary>Full User JSON Payload </summary> \n      <pre>\n      {JSON.stringify(userState.user, undefined, 2)}\n      </pre> \n      </details>\n      </HorizontalSpacingDiv>\n    </React.Fragment>\n  )\n}\n\nexport default UserProfile","/Users/dengel/code/oddle-react-task/src/store/usersSlice.ts",[],"/Users/dengel/code/oddle-react-task/src/components/Pagination/Pagination.tsx",[],"/Users/dengel/code/oddle-react-task/src/index.tsx",[],"/Users/dengel/code/oddle-react-task/src/store/index.ts",["67","68"],"/Users/dengel/code/oddle-react-task/src/store/rootReducer.ts",[],["69","70"],"/Users/dengel/code/oddle-react-task/src/reportWebVitals.ts",[],{"ruleId":"71","severity":1,"message":"72","line":2,"column":17,"nodeType":"73","messageId":"74","endLine":2,"endColumn":26},{"ruleId":"71","severity":1,"message":"75","line":45,"column":10,"nodeType":"73","messageId":"74","endLine":45,"endColumn":27},{"ruleId":"71","severity":1,"message":"76","line":26,"column":67,"nodeType":"73","messageId":"74","endLine":26,"endColumn":82},{"ruleId":"71","severity":1,"message":"77","line":1,"column":28,"nodeType":"73","messageId":"74","endLine":1,"endColumn":34},{"ruleId":"71","severity":1,"message":"78","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":217,"column":5,"nodeType":"81","endLine":217,"endColumn":7,"suggestions":"82"},{"ruleId":"71","severity":1,"message":"83","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":25},{"ruleId":"71","severity":1,"message":"84","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":18},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'selectedUserState' is assigned a value but never used.","'navigatedToUser' is assigned a value but never used.","'useRef' is defined but never used.","'callGithubAPI' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserFromStateOrHistory'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'combineReducers' is defined but never used.","'usersSlice' is defined but never used.","no-native-reassign",["90"],"no-negated-in-lhs",["91"],{"desc":"92","fix":"93"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getUserFromStateOrHistory]",{"range":"94","text":"95"},[4992,4994],"[getUserFromStateOrHistory]"]