[{"/Users/dengel/code/oddle-react-task/src/App.tsx":"1","/Users/dengel/code/oddle-react-task/src/components/Searchbar/Searchbar.tsx":"2","/Users/dengel/code/oddle-react-task/src/environment.ts":"3","/Users/dengel/code/oddle-react-task/src/components/Users/User/User.tsx":"4","/Users/dengel/code/oddle-react-task/src/components/Users/Users.tsx":"5","/Users/dengel/code/oddle-react-task/src/components/Cockpit/Cockpit.tsx":"6","/Users/dengel/code/oddle-react-task/src/components/Loader/Loader.tsx":"7","/Users/dengel/code/oddle-react-task/src/components/UserProfile/UserProfile.tsx":"8","/Users/dengel/code/oddle-react-task/src/utils/call-github-api.tsx":"9","/Users/dengel/code/oddle-react-task/src/store/usersSlice.ts":"10","/Users/dengel/code/oddle-react-task/src/hooks/useIsMount.tsx":"11","/Users/dengel/code/oddle-react-task/src/components/Pagination/Pagination.tsx":"12","/Users/dengel/code/oddle-react-task/src/index.tsx":"13","/Users/dengel/code/oddle-react-task/src/store/index.ts":"14","/Users/dengel/code/oddle-react-task/src/store/rootReducer.ts":"15","/Users/dengel/code/oddle-react-task/src/utils/github-call.tsx":"16","/Users/dengel/code/oddle-react-task/src/utils/github-user-call.tsx":"17"},{"size":505,"mtime":1610123473877,"results":"18","hashOfConfig":"19"},{"size":1230,"mtime":1610096993309,"results":"20","hashOfConfig":"19"},{"size":81,"mtime":1610094764818,"results":"21","hashOfConfig":"19"},{"size":1232,"mtime":1610189519199,"results":"22","hashOfConfig":"19"},{"size":1410,"mtime":1610189439615,"results":"23","hashOfConfig":"19"},{"size":3492,"mtime":1610206561451,"results":"24","hashOfConfig":"19"},{"size":1614,"mtime":1610095182847,"results":"25","hashOfConfig":"19"},{"size":4424,"mtime":1610207888282,"results":"26","hashOfConfig":"19"},{"size":377,"mtime":1610161983830,"results":"27","hashOfConfig":"19"},{"size":1670,"mtime":1610191105437,"results":"28","hashOfConfig":"19"},{"size":207,"mtime":1610184284825,"results":"29","hashOfConfig":"19"},{"size":1503,"mtime":1610185632082,"results":"30","hashOfConfig":"19"},{"size":612,"mtime":1610166486272,"results":"31","hashOfConfig":"19"},{"size":396,"mtime":1610176674343,"results":"32","hashOfConfig":"19"},{"size":262,"mtime":1610174567114,"results":"33","hashOfConfig":"19"},{"size":1431,"mtime":1610190987090,"results":"34","hashOfConfig":"19"},{"size":852,"mtime":1610205788000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qoktn4",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dengel/code/oddle-react-task/src/App.tsx",[],"/Users/dengel/code/oddle-react-task/src/components/Searchbar/Searchbar.tsx",[],"/Users/dengel/code/oddle-react-task/src/environment.ts",[],"/Users/dengel/code/oddle-react-task/src/components/Users/User/User.tsx",[],"/Users/dengel/code/oddle-react-task/src/components/Users/Users.tsx",["72","73"],"/Users/dengel/code/oddle-react-task/src/components/Cockpit/Cockpit.tsx",["74","75","76"],"/Users/dengel/code/oddle-react-task/src/components/Loader/Loader.tsx",[],["77","78"],"/Users/dengel/code/oddle-react-task/src/components/UserProfile/UserProfile.tsx",["79","80","81","82"],"import React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {callGithubUserReposAPI, callGithubFollowersAPI, callGithubFollowingAPI} from '../../utils/github-user-call';\nimport callGithubAPI from '../../utils/call-github-api';\n\ntype User = {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n  score: number;\n}\n\nconst getUser = async (login: string, pageNum: number) => {\n  let res = await callGithubAPI(login, pageNum)\n  let data = await res.json()\n  return data[0]\n}\n\n\n\nconst HorizontalSpacingDiv = styled.div`\n  display:flex;\n  flex-direction:row;\n  border-radius:35px;\n  border-left: 2px solid darkslateblue;\n  border-right: 2px solid darkslateblue;\n  justify-content: space-between;\n  text-align:center;\n  align-items:top;\n  width: 60%;\n  margin: 0 auto;\n  @media (max-width: 600px) {\n   flex-direction:column;\n   \n  }\n  div {\n    text-align:center;\n    margin:0 auto;\n    padding: 0px 5px 0px 5px;\n  }\n  div p {\n    max-width: 12ch;\n  }\n\n`\n\nconst BackButton = styled.button`\n  border: none;\n  outline: none;\n  height: 3em;\n  width: 5em;\n  border-radius: 5px;\n  background: #483d8b12;\n  top: 50%;\n  position: sticky;\n`\n\nconst UserAvatar = styled.img`\n  display: flex;\n  margin: 0 auto;\n  height:7em;\n  width:7em;\n  border-radius:50%;\n`\n\nconst UserProfile = (props: any) => {\n  let {login} = useParams<{login: string}>()\n  let user = props.location.state.user\n  let loaded = false;\n  \n  const [reposState, setReposState] = useState<{repos: any[]}>({repos: []})\n  const [followersState, setFollowersState] = useState<{followers: any[]}>({followers: []})\n  const [followingState, setFollowingState] = useState<{following: any[]}>({following: []})\n  useEffect(() => {\n    (async function () {\n      console.log(\"inside mounted\")\n      let reposResponse = await callGithubUserReposAPI(login)\n      let repos = await reposResponse.json();\n      setReposState({repos: repos})\n\n      let followersResponse = await callGithubFollowersAPI(login)\n      let followers= await followersResponse.json()\n      \n      setFollowersState({followers: followers})\n\n      let followingResponse = await callGithubFollowingAPI(login)\n      let following = await followingResponse.json()\n      \n      setFollowingState({following: following})\n    })()\n  },[login])\n  /**\n   * TODO\n   * [] make requests to the user repositories api, folowers api, and following api\n   * [] make it look pretty\n   * [x] add a back button\n   * [] make sure the historyAPI is working(?)\n   * [] create a check that, if the route is accessed without being \"navigated\" \n   * to from within the app, that it will fetch the correct data anyways\n   */\n  // console.log('repostate', reposState.repos)\n  // const repos = reposState.repos\n  // const followers = followersState.followers\n  // const following = followingState.following\n   const goBackHandler = () => {\n     props.history.goBack()\n   }\n\n  return(\n    <React.Fragment>\n      <BackButton onClick={goBackHandler}> back </BackButton>\n      <UserAvatar src={user.avatar_url} alt=\"\"/>\n      \n      <HorizontalSpacingDiv>\n        <div>\n          <h3>Repos</h3>\n      {\n        reposState.repos.map( (repo, id) => {\n          \n          return (\n            <p key={id}>{repo.name}</p> \n            )\n          })\n        }\n        </div>\n\n        <div>\n          <h3>Followers</h3>\n      {\n        followersState.followers.map( (follower, id) => {\n          console.log(follower);\n          return (\n            <p key={id}>{follower.login}</p> \n            )\n          })\n        }\n        </div>\n\n        <div>\n          <h3>Following</h3>\n      {\n        followingState.following.map( (follow, id) => {\n          \n          return (\n            <p key={id}>{follow.login}</p> \n            )\n          })\n        }\n        </div>\n      </HorizontalSpacingDiv>\n      {/* <a href={currentUserState?.currentUser?.followers_url}>Followers</a>\n      <a href={currentUserState?.currentUser?.following_url}>Following</a> */}\n    </React.Fragment>\n  )\n}\n\nexport default UserProfile","/Users/dengel/code/oddle-react-task/src/utils/call-github-api.tsx",[],"/Users/dengel/code/oddle-react-task/src/store/usersSlice.ts",[],"/Users/dengel/code/oddle-react-task/src/hooks/useIsMount.tsx",[],"/Users/dengel/code/oddle-react-task/src/components/Pagination/Pagination.tsx",[],"/Users/dengel/code/oddle-react-task/src/index.tsx",[],"/Users/dengel/code/oddle-react-task/src/store/index.ts",["83","84"],"/Users/dengel/code/oddle-react-task/src/store/rootReducer.ts",[],"/Users/dengel/code/oddle-react-task/src/utils/github-call.tsx",["85"],"/Users/dengel/code/oddle-react-task/src/utils/github-user-call.tsx",[],{"ruleId":"86","severity":1,"message":"87","line":2,"column":17,"nodeType":"88","messageId":"89","endLine":2,"endColumn":26},{"ruleId":"86","severity":1,"message":"90","line":27,"column":10,"nodeType":"88","messageId":"89","endLine":27,"endColumn":27},{"ruleId":"86","severity":1,"message":"91","line":9,"column":8,"nodeType":"88","messageId":"89","endLine":9,"endColumn":19},{"ruleId":"86","severity":1,"message":"92","line":10,"column":8,"nodeType":"88","messageId":"89","endLine":10,"endColumn":13},{"ruleId":"86","severity":1,"message":"93","line":21,"column":10,"nodeType":"88","messageId":"89","endLine":21,"endColumn":29},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"86","severity":1,"message":"98","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":34},{"ruleId":"86","severity":1,"message":"99","line":8,"column":6,"nodeType":"88","messageId":"89","endLine":8,"endColumn":10},{"ruleId":"86","severity":1,"message":"100","line":30,"column":7,"nodeType":"88","messageId":"89","endLine":30,"endColumn":14},{"ruleId":"86","severity":1,"message":"101","line":86,"column":7,"nodeType":"88","messageId":"89","endLine":86,"endColumn":13},{"ruleId":"86","severity":1,"message":"102","line":3,"column":10,"nodeType":"88","messageId":"89","endLine":3,"endColumn":25},{"ruleId":"86","severity":1,"message":"103","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":18},{"ruleId":"86","severity":1,"message":"104","line":6,"column":7,"nodeType":"88","messageId":"89","endLine":6,"endColumn":14},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'selectedUserState' is assigned a value but never used.","'UserProfile' is defined but never used.","'store' is defined but never used.","'fromPaginationState' is assigned a value but never used.","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"'useRef' is defined but never used.","'User' is defined but never used.","'getUser' is assigned a value but never used.","'loaded' is assigned a value but never used.","'combineReducers' is defined but never used.","'usersSlice' is defined but never used.","'headers' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]